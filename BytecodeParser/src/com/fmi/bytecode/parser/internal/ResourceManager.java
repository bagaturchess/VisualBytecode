package com.fmi.bytecode.parser.internal;


import java.text.MessageFormat;


public final class ResourceManager
{
    private static final Object[] OBJECT_ARRAY_0;
    private static final String[] PROPERTY_NAMES;
    
    static {
        OBJECT_ARRAY_0 = new Object[0];
        PROPERTY_NAMES = new String[] { "CANCEL_MNEMONIC", "CF_ATTRIBUTE_INFO_ALREADY_EXISTS", "CF_BAD_ATYPE", "CF_BAD_RETURN_TYPE", "CF_CODE_WITHOUT_INSTRUCTIONS", "CF_DISASSEMBLER_ATTRIBUTES_NOT_DISASSEMBLED", "CF_DISASSEMBLER_ATTRIBUTE_NOT_DISASSEMBLED", "CF_DISASSEMBLER_CALCULATED_MAX_STACK", "CF_DISASSEMBLER_NO_CODE", "CF_DUPLICATE_FIELD", "CF_EOF_REACHED", "CF_FIELD_BAD_FIRST_CHAR", "CF_FIELD_DESCRIPTOR_BAD", "CF_FIELD_DESCRIPTOR_NULL", "CF_ILLEGAL_ARGUMENT", "CF_ILLEGAL_NEWARRAY_OPERAND", "CF_INCOMPATIBLE_CP_TAG", "CF_INDEX_OUT_OF_BOUNDS", "CF_INSTRUCTION_WITH_LABEL_NOT_FOUND", "CF_INVALID_USAGE_OF_METHOD", "CF_JLS_TYPE_CONTAINS_SPACES", "CF_LABEL_IS_ALREADY_PRESENT", "CF_METHOD_CODE_DEFERRED", "CF_METHOD_DESCRIPTOR_NULL", "CF_METHOD_DESCRIPTOR_WITHOUT_BRACKET", "CF_METHOD_PARAMETERS_255_SLOTS", "CF_METHOD_PARAMETERS_ARRAY_ITEM_TYPE", "CF_METHOD_PARAMETERS_BAD_CHAR", "CF_METHOD_PARAMETERS_BAD_DESCRIPTOR", "CF_METHOD_PARAMETERS_L_CLOSED", "CF_METHOD_PARAMETERS_NULL", "CF_METHOD_PARAMETERS_OPENING_BRACKET", "CF_MODIFIER_ANT_ATTRIBUTE_REQUIRED", "CF_MODIFIER_ANT_COULD_NOT_LOAD_PROPERTIES", "CF_MODIFIER_ANT_FILE_DELETED", "CF_MODIFIER_ANT_FILE_DOESNT_EXIST", "CF_MODIFIER_ANT_FILE_IS_A_DIRECTORY", "CF_MODIFIER_ANT_INCOMPATIBLE_IN_AND_OUT", "CF_MODIFIER_ANT_LOADING_CONFIGURATION", "CF_MODIFIER_ANT_MODIFICATION_COMPLETED", "CF_MODIFIER_ANT_UNABLE_TO_DELETE", "CF_MODIFIER_BAD_PARAMETER_FIRST_CHAR", "CF_MODIFIER_BAD_RETURN_TYPE_FIRST_CHAR", "CF_MODIFIER_CHECKING", "CF_MODIFIER_DONE", "CF_MODIFIER_INCONSISTENT_FILES", "CF_MODIFIER_INPUT", "CF_MODIFIER_INPUT_FILE_DOES_NOT_EXIST", "CF_MODIFIER_INPUT_OUTPUT", "CF_MODIFIER_METHOD", "CF_MODIFIER_MODIFICATION_CANCELLED", "CF_MODIFIER_MODIFYING", "CF_MODIFIER_OUTPUT", "CF_MODIFIER_PARAMETER_BAD_LENGTHS", "CF_MODIFIER_PARAMETER_DEPENDENCY", "CF_MODIFIER_PARAMETER_ELEMENT_NULL", "CF_MODIFIER_USAGE", "CF_NO_CANONICAL_LABEL", "CF_NO_CLASS_VALUE", "CF_NO_DESCRIPTOR_VALUE", "CF_NO_DOUBLE_VALUE", "CF_NO_FLOAT_VALUE", "CF_NO_INSTRUCTION_BOUND", "CF_NO_INT_VALUE", "CF_NO_LABEL_BOUND", "CF_NO_LONG_VALUE", "CF_NO_NAME_AND_TYPE_VALUE", "CF_NO_NAME_VALUE", "CF_NO_STRING_VALUE", "CF_NULL", "CF_OPERAND_CP_INFO_AND_INT_BAD", "CF_PARSER_BAD_ATTRIBUTE_LENGTH", "CF_PARSER_BAD_MAGIC_NUMBER", "CF_PARSER_INVALID_CODE_SIZE", "CF_PARSER_INVALID_CP_TAG", "CF_PARSER_INVALID_INSTRUCTION_LENGTH", "CF_PARSER_PADDING_0", "CF_PARSER_UNKNOWN_OPERANDS", "CF_REF_INSTRUCTION_NOT_FOUND", "CF_SERIALIZER_ENDPC_NOT_RESOLVED", "CF_SERIALIZER_INCONSISTENT_STACK_SIZES", "CF_SERIALIZER_INVALID_CP_TAG", "CF_SERIALIZER_NEGATIVE_STACK_SIZE", "CF_SERIALIZER_NO_SUPER_CLASS", "CF_SERIALIZER_NO_THIS_CLASS", "CF_SERIALIZER_OPERAND_NOT_INTEGER", "CF_SERIALIZER_UNKNOWN_OPCODE", "CF_UNKNOWN_STACK_DECREASE", "CF_UNKNOWN_STACK_INCREASE", "CF_USAGE", "CLASSES", "GUI_FC_ACCESS_DENIED", "GUI_FC_ADD", "GUI_FC_BYTES", "GUI_FC_CANT_CREATE_DIR", "GUI_FC_CANT_CREATE_FILE", "GUI_FC_CAN_READ", "GUI_FC_CAN_WRITE", "GUI_FC_CREATE_NEW_DIRECTORY", "GUI_FC_CREATE_NEW_FILE", "GUI_FC_DIRECTORY_NAME", "GUI_FC_EXCEPTION", "GUI_FC_FILENAME", "GUI_FC_FILE_PROPERTIES", "GUI_FC_FILE_SIZE", "GUI_FC_HIDDEN", "GUI_FC_LAST_MODIFIED", "GUI_FC_NAME", "GUI_FC_NONE", "GUI_FC_NOT_APPLICABLE", "GUI_FC_PERMISSIONS", "GUI_FC_QUICK_VIEW", "GUI_PE_ALL_PROPERTIES", "GUI_PE_ALL_PROPERTIES_MNEMONIC", "GUI_PE_COPY_TO_CLIPBOARD", "GUI_PE_COPY_TO_CLIPBOARD_MNEMONIC", "GUI_PE_DESTINATION", "GUI_PE_DONE", "GUI_PE_EXCEPTION", "GUI_PE_EXPORTED_PROPERTIES", "GUI_PE_EXPORT_PROPERTIES", "GUI_PE_EXPORT_TO_A_FILE", "GUI_PE_EXPORT_TO_A_FILE_MNEMONIC", "GUI_PE_FIX_CR_LF", "GUI_PE_FIX_CR_LF_MNEMONIC", "GUI_PE_NAME", "GUI_PE_NEW_PROPERTY", "GUI_PE_OPTIONS", "GUI_PE_PROPERTIES_EXPORTED_CLIPBOARD", "GUI_PE_PROPERTIES_EXPORTED_FILE", "GUI_PE_REMOVE_PROPERTIES", "GUI_PE_REMOVE_PROPERTY", "GUI_PE_REMOVE_Q", "GUI_PE_SELECTED_PROPERTIES", "GUI_PE_SELECTED_PROPERTIES_MNEMONIC", "GUI_PE_SELECT_AN_OUTPUT_FILE", "GUI_PE_THERE_IS_NO_OUTPUT_FILE", "GUI_PE_UNABLE_TO_EXPORT_PROPERTIES", "GUI_PE_VALUE", "GUI_WIZ_ALLOW_TO_PROPAGATE", "GUI_WIZ_ALLOW_TO_PROPAGATE_MNEMONIC", "GUI_WIZ_BASE_DIR_OR_JAR", "GUI_WIZ_BLA_BLA", "GUI_WIZ_BYTECODE_MODIFIER", "GUI_WIZ_CONFIRM_EXIT", "GUI_WIZ_DIR_FOR_GENERATED", "GUI_WIZ_EXIT_QUESTION", "GUI_WIZ_FINISHED", "GUI_WIZ_FINISHED_1", "GUI_WIZ_FINISHED_2", "GUI_WIZ_FINISHED_3", "GUI_WIZ_FIX_SUID", "GUI_WIZ_FIX_SUID_MNEMONIC", "GUI_WIZ_IDENTIFIER", "GUI_WIZ_METHODS_WITH_ARGUMENTS", "GUI_WIZ_METHODS_WITH_ARGUMENTS_MNEMONIC", "GUI_WIZ_MODIFY", "GUI_WIZ_MODIFY_MNEMONIC", "GUI_WIZ_OUTPUT_DIR_OR_JAR", "GUI_WIZ_PROPERTIES", "GUI_WIZ_SETTINGS", "GUI_WIZ_SPEED", "GUI_WIZ_USE_HEADING", "METHODS", "MISC_BAD_IDENTIFIER", "MISC_IDENTIFIER_CONTAINS_SPACE", "MISC_IDENTIFIER_IS_EMPTY", "MISC_IDENTIFIER_IS_NULL", "MISC_METHOD_DOES_NOT_EXIST", "OPEN", "OPEN_MNEMONIC", "SAVE", "SAVE_MNEMONIC", "TIME", "TRACING_32_PLUGINS", "TRACING_PLUGIN_ALREADY_IN_USE", "TRACING_PLUGIN_CANT_BE_MODIFIED", "TRACING_PLUGIN_NOT_IN_USE" };
    }
    
    private ResourceManager() {
    }
    
    public static String get(final int resourceId) {
        return get(resourceId, ResourceManager.OBJECT_ARRAY_0);
    }
    
    public static String get(final int resourceId, final Object argument) {
        return get(resourceId, new Object[] { argument });
    }
    
    public static String get(final int resourceId, final int argument) {
        return get(resourceId, new Object[] { new Integer(argument) });
    }
    
    public static String get(final int resourceId, final Object argument0, final int argument1) {
        return get(resourceId, new Object[] { argument0, new Integer(argument1) });
    }
    
    public static String get(final int resourceId, final Object argument0, final Object argument1) {
        return get(resourceId, new Object[] { argument0, argument1 });
    }
    
    public static String get(final int resourceId, final int argument0, final int argument1) {
        return get(resourceId, new Object[] { new Integer(argument0), new Integer(argument1) });
    }
    
    public static String get(final int resourceId, final Object[] arguments) {
        try {
            final MessageFormat mf = new MessageFormat(ResourceManager.PROPERTY_NAMES[resourceId]);
            return mf.format(arguments);
        }
        catch (Exception e) {
            e.printStackTrace();
            final StringBuffer buffer = new StringBuffer();
            buffer.append("Exception in i18n, cannot get message with id '" + resourceId + "'.");
            if (arguments != null && arguments.length > 0) {
                buffer.append("Arguments:");
                for (int i = 0; i < arguments.length; ++i) {
                    buffer.append(' ').append(arguments[i]);
                }
                buffer.append('.');
            }
            return buffer.toString();
        }
    }
}